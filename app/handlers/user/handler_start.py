# app/handlers/user/handler_start.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from app.keyboards.kbreply import main_menu_keyboard
from app.keyboards.kbinline import continue_registration_keyboard
from app.database import requests as db_requests  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º db_requests

start_router = Router()


class RegistrationState(StatesGroup):
    waitingForName = State()
    waitingForPhone = State()


@start_router.message(CommandStart())
async def handlerStart(message: Message, state: FSMContext):  # session_maker —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user = await db_requests.getUser(message.from_user.id)  # –ò–°–ü–†–ê–í–õ–ï–ù–û: session_maker —É–¥–∞–ª–µ–Ω –∏–∑ –≤—ã–∑–æ–≤–∞

    reply_kb = main_menu_keyboard

    if not user or not user.first_name or not user.phone_number:
        await message.answer(
            """–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–∞—Ä–±–µ—Ä—à–æ–ø!
–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ª—É—á—à–∏–µ —Å—Ç—Ä–∏–∂–∫–∏ –∏ –±—Ä–∏—Ç—å–µ –≤ –≥–æ—Ä–æ–¥–µ.
–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.""",
            reply_markup=continue_registration_keyboard
        )
        await state.set_state(RegistrationState.waitingForName)
    else:
        await message.answer(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name}! üëã",
            reply_markup=reply_kb
        )